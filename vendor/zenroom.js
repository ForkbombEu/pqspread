/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/zenroom@4.46.0/dist/main/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.safe_zencode_valid_code=exports.zencode_valid_code=exports.introspect=exports.zencode_valid_input=exports.zenroom_hash=exports.zenroom_hash_final=exports.zenroom_hash_update=exports.zenroom_hash_init=exports.zenroom_exec=exports.zencode_exec=void 0;const zenroom_js_1=__importDefault(require("./zenroom.js")),cache={module:null},getModule=async()=>(null===cache.module&&(cache.module=await(0,zenroom_js_1.default)()),cache.module),zencode_exec=async(e,o)=>{const r=await getModule();return new Promise(((t,n)=>{let s="",l="";const c=r.cwrap("zencode_exec","number",["string","string","string","string"]);r.print=e=>s+=e,r.printErr=e=>l+=e,r.exec_ok=()=>{t({result:s,logs:l})},r.exec_error=()=>{n({result:s,logs:l})},r.onAbort=()=>{n({result:s,logs:l})};const{data:a=null,keys:i=null,conf:_=null}=Object.assign({},o);c(e,_,i,a)}))};exports.zencode_exec=zencode_exec;const zenroom_exec=async(e,o)=>{const r=await getModule();return new Promise(((t,n)=>{let s="",l="";const c=r.cwrap("zenroom_exec","number",["string","string","string","string"]);r.print=e=>s+=e,r.printErr=e=>l+=e,r.exec_ok=()=>{t({result:s,logs:l})},r.exec_error=()=>{n({result:s,logs:l})},r.onAbort=()=>{n({result:s,logs:l})};const{data:a=null,keys:i=null,conf:_=null}=Object.assign({},o);c(e,_,i,a)}))};exports.zenroom_exec=zenroom_exec;const zenroom_hash_init=async e=>{const o=await getModule();return new Promise(((r,t)=>{let n="",s="";const l=o.cwrap("zenroom_hash_init","number",["string"]);o.print=e=>n+=e,o.printErr=e=>s+=e,o.exec_ok=()=>{r({result:n,logs:s})},o.exec_error=()=>{t({result:n,logs:s})},o.onAbort=()=>{t({result:n,logs:s})},l(e)}))};exports.zenroom_hash_init=zenroom_hash_init;const zenroom_hash_update=async(e,o)=>{const r=await getModule();return new Promise(((t,n)=>{let s="",l="";const c=r.cwrap("zenroom_hash_update","number",["string","array","number"]);r.print=e=>s+=e,r.printErr=e=>l+=e,r.exec_ok=()=>{t({result:s,logs:l})},r.exec_error=()=>{n({result:s,logs:l})},r.onAbort=()=>{n({result:s,logs:l})},c(e,o,o.length)}))};exports.zenroom_hash_update=zenroom_hash_update;const zenroom_hash_final=async e=>{const o=await getModule();return new Promise(((r,t)=>{let n="",s="";const l=o.cwrap("zenroom_hash_final","number",["string"]);o.print=e=>n+=e,o.printErr=e=>s+=e,o.exec_ok=()=>{r({result:n,logs:s})},o.exec_error=()=>{t({result:n,logs:s})},o.onAbort=()=>{t({result:n,logs:s})},l(e)}))};exports.zenroom_hash_final=zenroom_hash_final;const zenroom_hash=async(e,o)=>{const r=65536;let t=await(0,exports.zenroom_hash_init)(e),n=0;for(n=0;n<o.byteLength;n+=r){const e=n+r>o.byteLength?o.byteLength:n+r,s=new Uint8Array(o.slice(n,e));t=await(0,exports.zenroom_hash_update)(t.result,s)}return(0,exports.zenroom_hash_final)(t.result)};exports.zenroom_hash=zenroom_hash;const zencode_valid_input=async(e,o)=>{const r=await getModule();return new Promise(((t,n)=>{let s="",l="";const c=r.cwrap("zencode_valid_input","number",["string","string","string","string","string"]);r.print=e=>s+=e,r.printErr=e=>l+=e,r.exec_ok=()=>{t({result:s,logs:l})},r.exec_error=()=>{n({result:s,logs:l})},r.onAbort=()=>{n({result:s,logs:l})},c(e,null,null==o?void 0:o.keys,null==o?void 0:o.data,null)}))};exports.zencode_valid_input=zencode_valid_input;const introspect=async(e,o)=>{try{const{result:r}=await(0,exports.zencode_valid_input)(e,o);return JSON.parse(r).CODEC}catch({logs:e}){const o=JSON.parse(e).filter((e=>e.startsWith("J64 HEAP:"))).map((e=>e.replace("J64 HEAP:","").trim()))[0];return JSON.parse(Buffer.from(o,"base64").toString("utf-8"))}};exports.introspect=introspect;const zencode_valid_code=async(e,o=null,r=1)=>{const t=await getModule();return new Promise(((n,s)=>{let l="",c="";const a=t.cwrap("zencode_valid_code","number",["string","string","number"]);t.print=e=>l+=e,t.printErr=e=>c+=e,t.exec_ok=()=>{n({result:l,logs:c})},t.exec_error=()=>{s({result:l,logs:c})},t.onAbort=()=>{s({result:l,logs:c})},a(e,o,r)}))};exports.zencode_valid_code=zencode_valid_code;const safe_zencode_valid_code=async(e,o=null)=>(0,exports.zencode_valid_code)(e,o,0);exports.safe_zencode_valid_code=safe_zencode_valid_code;
//# sourceMappingURL=/sm/d1150e126cc1e74a01233039e180758f339e859be6998274180f66e44c8c7cf9.map